syntax = "proto3";

package io.bigfast;

message Empty {}

message Channel {
    message Message {
        uint64 id = 1;
        uint64 channelId = 2;
        uint64 userId = 3;
        string content = 4;
    }

    message Get {
        uint64 channelId = 1;
        uint32 beforeTs = 2;
        uint32 batchSize = 3;
    }

    message Create {
        uint64 channelId = 1;
    }

    message Subscription {
        message Add {
            uint64 channelId = 1;
            uint64 userId = 2;
        }

        message Remove {
            uint64 channelId = 1;
            uint64 userId = 2;
        }

        message Get {
            uint64 channelId = 1;
            uint32 batchSize = 2;
            enum SortBy {
                RECENT = 0;
                VOLUME = 1;
            }
        }

        repeated uint64 users = 1;
    }

    uint64 id = 1;
    repeated Message messages = 2;
    Subscription subscription = 3;
}

// The chat service definition.
service Chat {
    rpc ChannelMessageStream(stream Channel.Message) returns (stream Channel.Message) {}
    rpc CreateChannel(Empty) returns (Channel) {}
    rpc ChannelHistory(Channel.Get) returns (Channel) {}

    rpc SubscribeChannel(Channel.Subscription.Add) returns (Empty) {}
    rpc UnsubscribeChannel(Channel.Subscription.Remove) returns (Empty) {}
}

